x<-c("a", "b", "c", "d")
for (i in 1:4){
print x[i]
for (i in 1:4){
print(x[i])
}
for (i in seq_along(x)){
print(x[i])
}
for (letter in x){}
for (letter in x){
print(letter)
}
x<-matrix(1:6, 2,3)
x
for(i in seq_len(nrow(x))){
for (j in seq_len(ncol(x))){
print(x[i,j])
}
}
args(lm)
mean
add2<-function(x,y){
x+y
}
add2(5,6)
add2(7,8)
above10<-function(x){
use<-x>10
x[use]
}
y<-c(10,11,1,13,15,6,2,22)
aboe10(y)
above10(y)
above_what<-function(x,what){
use<-x > what
x[use]
}
above_what(y,12)
above_what(y,10)
above_what(y,11)
columnmeans<-function(y){
nc<-ncol(y)
means<-numeric(nc)
for (i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columnmeans(airquality)
columnmeans<-function(y, removeNA = TRUE){
nc<-ncol(y)
means<-numeric(nc)
for (i in 1:nc){
means[i]<-mean(y[,i], removeNA)
}
means
}
columnmeans(airquality)
columnmeans(airquality)
columnmeans(airquality)
columnmeans<-function(y, removeNA = TRUE){
nc<-ncol(y)
means<-numeric(nc)
for (i in 1:nc){
means[i]<-mean(y[,i], na.rm=removeNA)
}
means
}
columnmeans(airquality)
x<-system.time()
x<-Sys.time()
x
p<-as.POSIXlt(x)
p
q<-as.POSIXct(x)
q
names(unclass(p))
p$sec
p$sec
p$wday
p$mday
p$yday
p$isdst
p$zone
p
unclass(q)
unclass(p)
f <- function(x){
g<- function(y){
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
DT1<-data.table(A=1:3,B=letters[1:3])
library(data.table)
DT1<-data.table(A=1:3,B=letters[1:3])
DT1
DT2<-data.table(A=4:5,B=letters[4:5])
DT2
rbind(DT1, DT2)
DT3<-data.frame(A=NULL, B=NULL)
DT3
rbind(dT3,DT1)
rbind(DT3,DT1)
rbind(DT3,DT1,DT2)
rbind(DT3,DT2)
x<-1
x
y<-as.character(x)
?format
x
format(x,width=3)
format(x,width=3,zero.print)
format(x,width=3,zero.print=T)
format(x,width=3,drop0trailing=F)
?sprintf
sprintf("%05",x)
sprintf("%05d",x)
sprintf("%03d",x)
x<-23
sprintf("%03d",x)
sprintf("%03d%s",x, ".csv")
y<-sprintf("%03d%s",x, ".csv")
y
directory<="specdata"
directory<-"specdata"
sprintf("%s/%03d.csv",x)
sprintf("%s/%03d.csv",directory,x)
getwd()
getwd()
getwd()
setwd("C:/Users/Dozie/Downloads/R Statistics/Lectures/Course 2/Week 2")
getwd()
tmpFile<-sprintf("%s/%03d.csv",directory,23)
tmpFile
tmpdata<-read.csv(file=tmpFile,header=T)
head(tmpdata,3)
DT0<-data.table(tmpdata)
head(DT0,3)
pollutant<-"nitrate"
pollutant
DT[,pollutant]
DT[,nitrate
]
DT$nitrate
DT0[,pollutant]
DT0[[pollutant]]
mean(DT0[[pollutant]],na.rm=T)
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
head(DT0,3)
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",70:72)
pollutantmean("specdata","nitrate",1:10)
pollutantmean("specdata","nitrate",23)
for (i in 70:72){
print(i)
}
tmpfile<-sprintf("%s/%03.csv",directory,23)
tmpfile<-sprintf("%s/%03d.csv",directory,23)
tmpfile
tmpdata<-read.csv(file=tmpfile,header=T)
head(tmpdata,3)
DT0<-data.table(tmpdata)
mean(DT0[[pollutant]])
mean(DT0[[pollutant]],na.rm=T
)
source(pollutantmean.R)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",23)
pollutantmean("specdata","nitrate",10:20)
pollutantmean("specdata","nitrate",1:10)
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1)
pollutantmean("specdata","sulfate",2)
?sprintf
source("pollutantmean.R")
pollutantmean("specdata","sulfate",2)
pollutantmean("specdata","sulfate",1)
pollutantmean("specdata","sulfate",1:2)
pollutantmean("specdata","sulfate",1:10)
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",2:10)
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",2:10)
source("pollutantmean.R")
pollutantmean("specdata","sulfate",2:10)
pollutantmean("specdata","sulfate",1:10)
id<-c(1:10)
for(i in id){
tmpfile<-sprintf("%s/%03d.csv",directory,i)
print(tmpfile)
}
source("pollutantmean.R")
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","nitrate",23)
?format
?round
source("pollutantmean.R")
pollutantmean("specdata","nitrate",23)
tmpfile
head(tmpdata,3)
cp<-tmpdata[!is.na(tmpdata$sulfate)]
?is.na
is.na(tmpdata)
!is.na(tmpdata)
cp<-!is.na(tmpdata)
tmpdata[cp]
anyNA(tmpdata)
nrows(tmpdata)
nrow(tmpdata)
cmp<-0
for (i in 1:nrow(tmpdata)){
if (!anyNA(tmpdata[i,])){
cmp<-cmp+1
print(cmp)
}
}
?as.data.frame
source("complete.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
complete("specdata",30:25)
head(tmpdata,3)
DT1<-data.table(tmpdata)
DT1[!is.na(DT$sufate)]
DT1[!is.na(sulfate),]
DT1[!is.na(sulfate) & !is.na(nitrate),]
cmp<-DT1[!is.na(sulfate) & !is.na(nitrate),]
nrow(cmp)
cmp[.N]
source("complete1.R")
complete("specdata",1)
source("complete1.R")
complete("specdata",1)
source("complete1.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
complete("specdata",30:25)
library("swirl", lib.loc="C:/Users/Dozie/Documents/R/win-library/3.1")
swirl()
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mysqrt<-sqrt(z-1)
mySqrt<-sqrt(z-1)
mySqrt
myDiv<-s/mySqrt
myDiv<-z/mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4)+c(0,10,100)
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(aling=my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect[num_vect<1]
tf<-num_vect<1
tf
num_vect >= 6
my_char <- c("My", "name","is")
my_char
paste (my_char,collapse = "")
paste (my_char,collapse = " ")
c(my_char, "Dozie")
paste(my_char,"Dozie", collapse-" ")
c(my_char,"Dozie")
my_name<-c(my_char,"Dozie")
my_name
paste(my_char,"Dozie", collapse=" ")
paste(paste(my_char,collapse=" "), ""
paste(paste(my_char,collapse= " "),"Dozie", collapse=" ")
paste(my_name,collapse=" ")
paste("Hello","world!", sep=" ")
paste(1:3,c("" X", "Y", "Z"))"))
paste(1:3,c("X", "Y", "Z"))"))
}
)
)
paste(1:3, c("X","Y","Z"))
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep="_")
paste(LETTERS, 1:4, sep ="")
paste(LETTERS, 1:4, sep ="_")
paste(LETTERS, 1:4,sep="_")
paste(LETTERS, 1:4,sep="-")
source("pollutantmean.R")
pollutantmean("specdata",1:10)
pollutantmean("specdata",1:10)
pollutantmean("specdata","sulfact",1:10)
pollutantmean("specdata","sulfate",1:10)
?clear
cat("\014")
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate", 70:72)
pollutantmean("specdata","nitrate", 23)
pollutantmean("specdata","nitrate", 23:2)
sink("pollutantmeanPart1",append=F, split=F)
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
sink()
?cat
?print
?read.file
?read
?read.text
?read.csv
?source
?sink
source('C:/Users/Dozie/Downloads/R Statistics/Lectures/Course 2/Week 2/pollutantmean.R', echo=TRUE)
source("pollutantmean.R", echo=T)
?source
getwd()
submit()
source('C:/Users/Dozie/Downloads/R Statistics/Lectures/Course 2/Week 2/rprog-scripts-submitscript1.R', echo=TRUE)
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source("corr.R")
source("complete.R")
corr("specdata",150)
cr<-corr("specdata",150)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr<-corr("specdata",150)
head(cr)
summary(cr)
submit()
submit()
submit()
install.packages('RMySQL',type='source')
R.home()
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL',type='source')
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
?Sys.setenv
Sys.seten(MYSQL_HOME="C:/Program Files/MySQL/SQL Server 5.6")
Sys.setenv(MYSQL_HOME="C:/Program Files/MySQL/SQL Server 5.6")
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL',type='source')
Sys.getenv('MYSQL_HOME')
install.packages("RMySQL",type="source")
x<-list(a=1:5, b=rnorm(10))
lapply(x,mean)
x<-list(a=1:5, b=rnorm(10))
lapply(x,mean)
x<-list(a=1:4, b=rnorm(10), c=rnorm(20,1),d=rnorm(100,5))
lapply(x,mean)
x<-1:4
lapply(x,runiff)
lapply(x,runif)
x<-1:4
lapply(x,runif)
?runif
x<-list(a=matrix(1:4,2,2), b=matrix(1:6,3,3))
x
x<-list(a=matrix(1:4,2,2), b=matrix(1:6,3,2))
x
lapply(x,function(elt), elt[,1])
lapply(x,function(elt) elt[,1])
lapply(x,function(elt) elt[,1])
x<-list(a=1:4, b=rnorm(10), c=rnorm(20,1),d=rnorm(100,5))
lapply(x,mean)
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,sum)
x<-matrix(rnorm(200),20,10)
apply(x,1,quantile,probs=c(0.25,0.75))
apply(x,2,quantile,probs=c(0.25,0.75))
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims=2)
str(tapply)
?gl
x<-c(rnorm(10),runif(10),rnorm(10,1))
x
xtapply(x,f,mean,simplify=FASLE)
xapply(x,f,mean,simplify=FASLE)
tapply(x,f,mean,simplify=FASLE)
f<-gl(3,10)
f
levels
f
tapply(,f,mean)
tapply(x,f,mean)
tapply(x,f,range)
str(mapply)
list(rep(1,4),rep(2,3),rep(3,1),rep(4,1))
mapply(rep,1:4, 4:1)
noise<-function(n,mean,sd){
rnorm(n,mean,sd)
}
noise(5,12,sd)
noise(5,12,1)
noise(1:5,1:5,2)
mapply(noise, 1:5, 1:5, 2)
?invisible
?recover
library(datasets)
data(iris)
?iris
head (iris3)
head(iris)
irisDT <- data.table(iris)
library(data.table)
irisDT <- data.table(iris)
head(irisDT)
vir<-iristDT[Species=="virginica"]
vir<-irisDT[Species=="virginica"]
head(vir)
mean(vir$Sepal.Length)
apply(iris[,1:4],2,mean)
apply(vir[,1:4],2,mean)
apply(vir[,1:4],2,mean)
data(mtcars)
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
head (iris)
sapply(split(iris$Sepal.Length,iris$Species),mean)
x<-sapply(split(mtcars$mpg, mtcars$cyl), mean)
x
x[1,1]-x[1,3]
x$4-x$8
x[1]-x[3]
?ls
ls()
?debug
x<-sapply(split(mtcars$hp, mtcars$cyl), mean)
x
x[3]-x[1]
setwd("~/GitHub/ProgrammingAssignment2")
x<-matrix(rnorm(16,1),4,4)
x
solve(x)
if (!is.null(x)){
message("its not null")
}
source('~/GitHub/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
cacheSolve(x)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
cacheSolve(x)
x
y
y <- solve(x)
y
z <- list(x=x, y=y)
z
z$x
z$y
z$x <- matrix(rnorm(25,4),nrow=5)
z
z$y<-solve(z$x)
z
z$x<-null
z$x<-NULL
z
z$x <- matrix(rnorm(25,4),nrow=5)
z
z$p <- NULL
z
z$p<-solve(z$x)+z$y
z
source('~/GitHub/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
cacheSolve(x)
